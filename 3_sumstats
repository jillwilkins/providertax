# Meta --------------------------------------------------------------------
## Author:        Jill Wilkins
## Date Created:  10/9/2025
## Date Edited:   10//2025
## Goal:          Summary Statistics Table         
## 
library(knitr)
library(kableExtra)

# set up  
# key variables
sum_vars <- c("private_prop_discharges", "mcaid_prop_discharges", "mcaid_prop", "ucc_prop", 
                   "cost_per_discharge", "cost_to_charge")

var_names <- c(
  private_prop_discharges = "Non Public Proportion of Discharges",
  mcaid_prop_discharges = "Medicaid Proportion of Discharges",
  mcaid_prop = "Medicaid Proportion",
  ucc_prop = "Uncompensated Care Proportion",
  cost_per_discharge = "Cost per Discharge",
  cost_to_charge = "Cost to Charge Ratio"
)

# recall hospdata is only for SERV == 10, and so Years > 2008 basically? 
# remove outliers
hospdata_clean <- hospdata

for (var in sum_vars) {
  threshold <- quantile(hospdata[[var]], 0.99, na.rm = TRUE)
  hospdata_clean <- hospdata_clean %>%
    filter(.data[[var]] <= threshold)
}


# TABLE: SUMMARY STATISTICS (full, with tax, no tax) 
# FULL SAMPLE: hospital level means
hospmeans <- hospdata_clean %>%
   filter(year > 2004, year < 2025) %>%
   group_by(mcrnum) %>%
   summarise(across(all_of(names(var_names)),  # variables to summarise
                   ~mean(.x, na.rm = TRUE),
                   .names = "{.col}")) %>%
   ungroup()

hosp_sum <- hospmeans %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(), names_to = c("variable", "stat"), names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(
    mean = as.numeric(mean),
    sd = as.numeric(sd),
    stat_string = sprintf("%.3f (%.3f)", mean, sd), 
    variable = ifelse(variable %in% names(var_names), var_names[variable], variable)
  ) %>%
  select(variable, stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      stat_string = as.character(nrow(hospmeans))
    )
  )

kable(hosp_sum, format = "latex", booktabs = TRUE,
      caption = "Summary Statistics by Treatment Status",
      col.names = c("Dependent Variable", "Mean (SD)"),
      align = "lc")

# Observation with Tax: Group Means 
tax_sum <- hospdata_clean %>%
  filter(yes_tax == 1) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Treated = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Treated = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 1])))
  )

View(tax_sum)

# Observation without Tax: Group Means
notax_sum <- hospdata_clean %>%
  filter(yes_tax == 0) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Control = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Control = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 0]))
    )
  )
View(notax_sum)
# Combine with hosp_sum
all_sum <- hosp_sum %>%
    left_join(tax_sum, by = "variable") %>%
    left_join(notax_sum, by = "variable")

kable(all_sum, format = "latex", booktabs = TRUE,
      caption = "Summary Statistics by Presence of Provider Tax",
      col.names = c("Dependent Variable", "All Hospitals", "With Tax", "Without Tax"),
      align = "lccc")

# TABLE: SUMMARY STATISTICS (by treatment status)
# treated hospitals only
treated_hos <- hospdata_clean %>%
  filter(treated == 1) %>%
  group_by(mcrnum) %>%  # group by hospital
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE)),
                   .names = "{.col}")) %>%
  ungroup() %>%
  summarise(across(everything(),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.2f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, est = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Number of Hospitals",
      est = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$treated == 1]))
    )
  )
View(treated_hos)

hospdata_clean %>%
  filter(year > 2004, treated == 1) %>%
  summarise(across(all_of(names(var_names)), ~sum(!is.na(.x))))
setdiff(names(var_names), names(hospdata_clean))

# treated before 2020
treated_hos2020 <- hospdata_clean %>%
  filter(treated_by_2020 == 1) %>%
  group_by(mcrnum) %>%  # group by hospital
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE)),
                   .names = "{.col}")) %>%
  ungroup() %>%
  summarise(across(everything(),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.2f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, est = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Number of Hospitals",
      est = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$treated_by_2020 == 1]))
    )
  )

# always hospitals only 
always_hos <- hospdata %>%
  filter(always == 1) %>%
  group_by(mcrnum) %>%  # group by hospital
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE)),
                   .names = "{.col}")) %>%
  ungroup() %>%
  summarise(across(everything(),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.2f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, est = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Number of Hospitals",
      est = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$always == 1]))
    )
  )

# never hospitals only
never_hos <- hospdata %>%
  filter(never == 1) %>%
  group_by(mcrnum) %>%  # group by hospital
  summarise(across(names(var_names),    
                   list(mean = ~mean(.x, na.rm = TRUE)),
                   .names = "{.col}")) %>%
  ungroup() %>%
  summarise(across(everything(),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%      
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.2f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, est = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Number of Hospitals",
      est = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$never == 1]))
    )
  )

# not treated by 2020 
notby2020 <- hospdata %>%
  filter(notyet2020 == 1) %>%
  group_by(mcrnum) %>%  # group by hospital
  summarise(across(names(var_names),    
                   list(mean = ~mean(.x, na.rm = TRUE)),
                   .names = "{.col}")) %>%
  ungroup() %>%
  summarise(across(everything(),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%      
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.2f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, est = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Number of Hospitals",
      est = as.character(n_distinct(hospdata$mcrnum[hospdata$notyet2020 == 1]))
    )
  )
View(notby2020)
# Combine all 
all_groups <- treated_hos %>%
    left_join(treated_hos2020, by = "variable") %>%
    left_join(always_hos, by = "variable") %>%
    left_join(never_hos, by = "variable") 

kable(all_groups, format = "latex", booktabs = TRUE,
      caption = "Summary Statistics by Treatment Status",
      col.names = c("Dependent Variable", "Treated Hospitals", "Treated by 2020", "Always Have Tax", "Never Have Tax"),
      align = "lcccc")


# DENSITY PLOTS
ggplot(filter(hospdata_clean, treated == 1), aes(x = mcaid_prop_discharges)) +
  geom_density(fill = "steelblue", alpha = 0.6) +
  labs(title = "Density of Medicaid Proportion of Discharges",
       x = "Medicaid Proportion of Discharges", y = "Density") +
  theme_minimal()


# now i want observations of eventually treated pre, post, and not yet treated by 2020 pre, post 
#########IGNORE
# Observation with Tax: Group Means 
pre_treated <- hospdata_clean %>%
  filter(yes_tax == 0 & treated_by_2020 == 1) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Treated = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Treated = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 0 & hospdata_clean$treated_by_2020 == 1])))
  )
View(hospdata_clean %>%
  filter(yes_tax == 0 & treated_by_2020 == 1))

pre_notyet <- hospdata_clean %>%
  filter(yes_tax == 0 & notyet2020 == 1) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Treated = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Treated = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 0 & hospdata_clean$notyet2020 == 1])))
  )

post_treated <- hospdata_clean %>%
  filter(yes_tax == 1 & treated_by_2020 == 1) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Treated = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Treated = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 1 & hospdata_clean$treated_by_2020 == 1])))
  )

post_notyet <- hospdata_clean %>%
  filter(yes_tax == 1 & notyet2020 == 1) %>%
  summarise(across(names(var_names),
                   list(mean = ~mean(.x, na.rm = TRUE),
                        sd = ~sd(.x, na.rm = TRUE)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = c("variable", "stat"),
               names_pattern = "(.+)_([^_]+)") %>%
  pivot_wider(names_from = stat, values_from = value) %>%
  mutate(stat_string = sprintf("%.3f (%.3f)", mean, sd),
         variable = var_names[variable]) %>%
  select(variable, Treated = stat_string) %>%
  bind_rows(
    tibble(
      variable = "Total Hospitals",
      Treated = as.character(n_distinct(hospdata_clean$mcrnum[hospdata_clean$yes_tax == 1 & hospdata_clean$notyet2020 == 1])))
  )
rm(time_treat_sum)
time_treat_sum <- pre_treated %>%
    left_join(pre_notyet, by = "variable") %>%
    left_join(post_treated, by = "variable") %>%
    left_join(post_notyet, by = "variable")

kable(time_treat_sum, format = "latex", booktabs = TRUE,
      caption = "Summary Statistics by Pre/Post Treated/Not Yet Treated",
      col.names = c("Dependent Variable", "Pre Treatment Group", "Pre Not Yet Treated", "Post Treatment Group", "Post Not Yet Treated"),
      align = "lcccc")
